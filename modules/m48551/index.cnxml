<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Java4560: Session Tracking using URL Rewriting</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m48551</md:content-id>
  <md:title>Java4560: Session Tracking using URL Rewriting</md:title>
  <md:abstract>The purpose of this module is to explain session tracking using URL rewriting, and to compare a servlet with a JSP to accomplish the same objective.</md:abstract>
  <md:uuid>f73f595d-c62a-43fd-9a85-a6e419fdc45d</md:uuid>
</metadata>

<content>

















<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>


		

</list>


		

</item>


	

</list>


	

</item>


	
	

<item id="li1004">
<link id="a1004" target-id="General_background_information">

General background information

</link>


</item>


	

<item id="li1005">
<link id="a1005" target-id="Discussion_and_sample_code">

Discussion and sample code

</link>


<list id="ul1003" list-type="bulleted">

		

<item id="li1006">
<link id="a1006" target-id="The_servlet_program">

The servlet program

</link>


<list id="ul1004" list-type="bulleted">

			

<item id="li1007">
<link id="a1007" target-id="Interesting_code_fragments">

Interesting code fragments

</link>


</item>


		

</list>


		

</item>


		

<item id="li1008">
<link id="a1008" target-id="The_JSP_program">

The JSP program

</link>


<list id="ul1005" list-type="bulleted">

			

<item id="li1009">
<link id="a1009" target-id="Interestingcodefragments2">

Interesting code fragments

</link>


</item>


		

</list>


		

</item>


	

</list>


	

</item>


	

<item id="li1010">
<link id="a1010" target-id="Run_the_program">

Run the programs

</link>


</item>




	

<item id="li1011">
<link id="a1011" target-id="Miscellaneous">

Miscellaneous

</link>


</item>


	

<item id="li1012">
<link id="a1012" target-id="Complete_program_listing">

Complete program listings

</link>


</item>




</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules designed for teaching 
	

<emphasis id="strong1000" effect="bold">
INEW 2338 Advanced Java (Web)

</emphasis>
 at Austin 
	Community College in Austin, TX. The purpose of this module is to explain 
	session tracking using URL rewriting, and to compare a servlet with a JSP to 
	accomplish the same objective.

</para>


	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1001">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures and Listings while you are reading about them.

</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1006" list-type="bulleted">

		

<item id="li1013">
<link id="a1013" target-id="Figure_1">

Figure 1

</link>

. The URL for hidden fields. 

</item>


		

<item id="li1014">
<link id="a1014" target-id="Figure_2">

Figure 2

</link>

. Servlet output screen. 

</item>


		

<item id="li1015">
<link id="a1015" target-id="Figure_3">

Figure 3

</link>

. HTML code created by servlet.

</item>



	

</list>


	

</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>


	

<list id="ul1007" list-type="bulleted">

		

<item id="li1016">
<link id="a1016" target-id="Listing_1">

Listing 1

</link>

. Beginning of the doGet method. 

</item>


		

<item id="li1017">
<link id="a1017" target-id="Listing_2">

Listing 2

</link>

. Get and save URL parameters named item. 

</item>


		

<item id="li1018">
<link id="a1018" target-id="Listing_3">

Listing 3

</link>

. Construct the new parameter string. 

</item>


		

<item id="li1019">
<link id="a1019" target-id="Listing_4">

Listing 4

</link>

. Concatenate current date and time to new parameter string. 

</item>


		

<item id="li1020">
<link id="a1020" target-id="Listing_5">

Listing 5

</link>

. Begin creation of the HTML page.

</item>


		

<item id="li1021">
<link id="a1021" target-id="Listing_6">

Listing 6

</link>

. Construct the hyperlink.

</item>


		

<item id="li1022">
<link id="a1022" target-id="Listing_7">

Listing 7

</link>

. Introductory text.

</item>


		

<item id="li1023">
<link id="a1023" target-id="Listing_8">

Listing 8

</link>

. Display date and time history.

</item>


		

<item id="li1024">
<link id="a1024" target-id="Listing_9">

Listing 9

</link>

. Display the current date and time.

</item>


		

<item id="li1025">
<link id="a1025" target-id="Listing_10">

Listing 10

</link>

. Import necessary packages.

</item>


		

<item id="li1026">
<link id="a1026" target-id="Listing_11">

Listing 11

</link>

. Get data from the old parameter string.

</item>


		

<item id="li1027">
<link id="a1027" target-id="Listing_12">

Listing 12

</link>

. Construct a new parameter string.

</item>


		

<item id="li1028">
<link id="a1028" target-id="Listing_13">

Listing 13

</link>

. Concatenate current date and time to the parameter string.

</item>


		

<item id="li1029">
<link id="a1029" target-id="Listing_14">

Listing 14

</link>

. Create the hyperlink.

</item>


		

<item id="li1030">
<link id="a1030" target-id="Listing_15">

Listing 15

</link>

. Display the list of dates.

</item>


		

<item id="li1031">
<link id="a1031" target-id="Listing_16">

Listing 16

</link>

. The servlet named Java4560a.java

</item>


		

<item id="li1032">
<link id="a1032" target-id="Listing_17">

Listing 17

</link>

. The JSP program named Java4560b.jsp.

</item>


	

</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="General_background_information" effect="bold">

General 
	background information

</emphasis>


</title>




<para id="p1002">
<emphasis id="strong1001" effect="bold">
A stateless protocol

</emphasis>
</para>




<para id="p1003">
You learned in earlier modules that the HTTP protocol is a relatively simple 
request/response protocol that does not retain historical information from one 
client request to the next. You also learned that historical information can be 
very important, and the maintenance of historical information is often referred 
to as 

<emphasis id="em1000" effect="italics">
"session tracking."

</emphasis>
</para>




<para id="p1004">
<emphasis id="strong1002" effect="bold">
Session tracking

</emphasis>
</para>




<para id="p1005">
Because session tracking is very important for many web applications, an


<link id="a1033" url="http://cnx.org/content/m48550/latest/?collection=col11441/latest">


earlier module

</link>

 along with this and the next several modules will show you some 
of the ways that you can accomplish session tracking using servlets and JSP.

</para>




<para id="p1006">
<emphasis id="strong1003" effect="bold">
Session tracking using URL rewriting

</emphasis>
</para>




<para id="p1007">
There are several different ways to accomplish session tracking with a 
servlet. The


<link id="a1034" url="http://cnx.org/content/m48550/latest/?collection=col11441/latest">


earlier module

</link>

 explained session tracking using hidden fields. This module 
will illustrate how to accomplish session tracking using URL rewriting.

</para>




<para id="p1008">
<emphasis id="strong1004" effect="bold">
Limited persistence

</emphasis>
</para>




<para id="p1009">
You learned in the 

<link id="a1035" url="http://cnx.org/content/m48550/latest/?collection=col11441/latest">


earlier module

</link>

 that the session tracking scheme using hidden fields is 
generally limited to one session consisting of multiple requests. You also 
learned that the scheme is probably not useful for large scale web commerce. 
However, it might be useful for an online game where the user makes a move and 
then clicks a 

<emphasis id="strong1005" effect="bold">
submit

</emphasis>
  button. The computer needs to remember the 
entire history of the game, but needn't necessarily remember the history if the 
user leaves the website by closing the browser page.

</para>




<para id="p1010">
The same holds true for session tracking using URL rewriting. Session 
tracking using URL rewriting provides only limited persistence. While this may 
seem like a major downside, there is at least one upside for both schemes. 

</para>




<para id="p1011">
<emphasis id="strong1006" effect="bold">
Comparison with cookies

</emphasis>
</para>




<para id="p1012">
A future module will explain session tracking using cookies. Cookies probably 
provide the most commonly used scheme for session tracking because cookies can 
provide persistence over long periods of time. However, there is also a downside 
to cookies. The user can disable cookies in the browser, which completely 
defeats the use of cookies for session tracking. 

</para>




<para id="p1013">
Therefore, if your online game uses cookies for session tracking and the user 
disables cookies, then you game won't work in that browser. As far as I know, it 
is not possible for the user to prevent session tracking using either hidden 
fields or URL rewriting.

</para>




<para id="p1014">
<emphasis id="strong1007" effect="bold">
A servlet and a JSP

</emphasis>
</para>




<para id="p1015">
I will explain two different programs that accomplish the same objective in 
this module. One 
of the programs is a servlet. The other program is a JSP. You probably need to 
understand the servlet version in order to really understand the JSP version.

</para>




<para id="p1016">
<emphasis id="strong1008" effect="bold">
The URL window with hidden fields

</emphasis>
</para>




<para id="p1017">
If you observed the URL window in your browser while running the hidden-field 
servlet in the


<link id="a1036" url="http://cnx.org/content/m48550/latest/?collection=col11441/latest">


earlier module

</link>

, you probably noticed that after several cycles, the window 
containing the URL looked something like 

<link id="a1037" target-id="Figure_1">

Figure 1

</link>

. 

</para>










<para id="p1018">
<emphasis id="strong1009" effect="bold">
<emphasis id="Figure_1" effect="bold">

Figure 1

</emphasis>

 - The URL for hidden fields.

</emphasis>
</para>




<para id="p1019">
<media id="media1000" alt="Missing Figure" display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/java4560a-01.jpg" width="678" height="37"/>
</media>


</para>






	

<para id="p1020">
What you see in 

<link id="a1038" target-id="Figure_1">

Figure 1

</link>

 is the standard way that HTML forms pass 
	parameters to their HTTP servers using the GET method.

</para>




<para id="p1021">
<emphasis id="strong1010" effect="bold">
A parameter string

</emphasis>
</para>




<para id="p1022">
When the user clicks the 

<emphasis id="strong1011" effect="bold">
submit

</emphasis>
 button, a string 
containing the names and values 

<emphasis id="em1001" effect="italics">
(name::value pairs again)

</emphasis>
 for all of the fields is created and 
concatenated onto the URL. The string of parameter values is joined to the URL 
with a "?" character. The individual parameters are separated from one another 
with the ampersand character.

</para>




<para id="p1023">
Recall that for the servlet in the


<link id="a1039" url="http://cnx.org/content/m48550/latest/?collection=col11441/latest">


earlier module

</link>

, the field named 

<emphasis id="strong1012" effect="bold">
firstName

</emphasis>
 
was the visible field in which the user entered a name. The fields named 

<emphasis id="strong1013" effect="bold">

item

</emphasis>
 were hidden fields that were created and populated with historical 
data when the servlet generated the HTML form for return to the client. You can 
see parameters with both of these names in 

<link id="a1040" target-id="Figure_1">

Figure 1

</link>

.

</para>




<para id="p1024">
<emphasis id="strong1014" effect="bold">
The parameters are accessible by the servlet

</emphasis>
</para>




<para id="p1025">
It doesn't really matter how these parameter names and values come to be 
concatenated onto the URL. As far as the servlet is concerned, their values are 
accessible using the methods 

<emphasis id="strong1015" effect="bold">
getParameter()

</emphasis>
 and 

<emphasis id="strong1016" effect="bold">

getParameterValues()

</emphasis>
.

</para>




<para id="p1026">
This suggests that in some cases, it might be beneficial for the servlet to 
save the historical data by concatenating it onto a URL referenced in the HTML 
page before returning the page to the client. That is one of the ways that URL 
rewriting can be used to implement session tracking.

</para>


	
	

</section>
<section id="h11003">
<title>
<emphasis id="Discussion_and_sample_code" effect="bold">

Discussion and sample code

</emphasis>


</title>


	
	

<para id="p1027">
As I mentioned earlier, I will present a servlet and a JSP program where 
	both are designed to achieve the same objective. This will make it possible 
	for you to compare the two programming styles.

</para>




<para id="p1028">
Both programs are designed to illustrate the concept of URL rewriting and are 
not intended to have any practical value in their own right.

</para>




<para id="p1029">
I will explain both programs in fragments. A complete listing of the servlet 
named 

<emphasis id="strong1017" effect="bold">
Java4560.java

</emphasis>
 is provided in 

<link id="a1041" target-id="Listing_16">

Listing 16

</link>

. A complete listing of the JSP 
program named 

<emphasis id="strong1018" effect="bold">
Java4560b.jsp

</emphasis>
 is provided in 

<link id="a1042" target-id="Listing_17">

Listing 17

</link>

.

</para>




<section id="h21001">
<title>
<emphasis id="The_servlet_program" effect="bold">

The servlet program

</emphasis>


</title>




<para id="p1030">
The servlet named 

<emphasis id="strong1019" effect="bold">
Java4560a.java

</emphasis>
 illustrates session tracking using URL rewriting. In this 
servlet, parameters containing the historical data are added to the servlet's URL 
each time the servlet generates a new HTML page. The updated URL is included as 
a hyperlink in the new web page.

</para>




<para id="p1031">
<emphasis id="strong1020" effect="bold">
The servlet output

</emphasis>
</para>




<para id="p1032">
Each time the servlet is called, it creates and displays an HTML page on the 
client screen similar to that shown in 

<link id="a1043" target-id="Figure_2">

Figure 2

</link>

. 

</para>





<para id="p1033">
<emphasis id="strong1021" effect="bold">
<emphasis id="Figure_2" effect="bold">

Figure 2

</emphasis>

 - Servlet output screen.

</emphasis>
</para>




<para id="p1034">
<media id="media1001" alt="Missing Figure" display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/java4560a-02.jpg" width="259" height="393"/>
</media>


</para>





<para id="p1035">
The page displays:

</para>




<list id="ul1008" list-type="bulleted">

	

<item id="li1033">
A hyperlink to the servlet URL labeled 

<emphasis id="strong1022" effect="bold">
Click Here

</emphasis>
 

</item>


	

<item id="li1034">
A list of the dates and times on which the user previously called the 
	servlet by clicking on the hyperlink.

</item>




</list>




<para id="p1036">
<emphasis id="strong1023" effect="bold">
A get request

</emphasis>
</para>




<para id="p1037">
Each time the user clicks the hyperlink, the client sends a GET request to 
the server. The GET request calls the servlet, which determines the current date 
and time in milliseconds relative to January 1, 1970. An HTML page is created and sent back to the client. 

</para>




<para id="p1038">
<emphasis id="strong1024" effect="bold">
Update the parameter string

</emphasis>
</para>




<para id="p1039">
The current date and time in milliseconds is added as a parameter named


<emphasis id="strong1025" effect="bold">
item

</emphasis>
 to the servlet URL referenced by the hyperlink in the 
newly-created HTML page. In addition to the current date and time, the values of 
the previous dates and times on which the user called the servlet are retrieved from the incoming URL 
parameter string and appended to the new URL parameter string.

</para>




<para id="p1040">
In other words, the parameter string values for each successive URL that is 
generated match those of the previous URL. In addition, a new parameter value is 
added that represents the current date and time.

</para>




<para id="p1041">
<emphasis id="strong1026" effect="bold">
Embed historical data in the web page

</emphasis>
</para>




<para id="p1042">
In a manner similar to session tracking using hidden fields, the historical data is saved by embedding it in the new HTML page that is 
returned to the client. There is no requirement to save the historical data in a 
database or in the server's file system.

</para>




<para id="p1043">
<link id="a1044" target-id="Figure_3">

Figure 3

</link>

 shows the HTML source code that corresponds to the web page shown in 


<link id="a1045" target-id="Figure_2">

Figure 2

</link>

.

</para>







<para id="p1044">
<emphasis id="strong1027" effect="bold">
<emphasis id="Figure_3" effect="bold">

Figure 3

</emphasis>

 - HTML code created by servlet.

</emphasis>
</para>




<para id="p1045">
<media id="media1002" alt="Missing Figure" display="block">
<image id="img1002" mime-type="image/jpeg" src="../../media/java4560a-03.jpg" width="514" height="319"/>
</media>


</para>








<para id="p1046">
<emphasis id="strong1028" effect="bold">
The URL parameter string

</emphasis>
</para>




<para id="p1047">
The most interesting thing in 

<link id="a1046" target-id="Figure_3">

Figure 3

</link>

 is the content of Line 4. 

<emphasis id="em1002" effect="italics">
(Note 
that Line 4 is wrapped and appears as three physical lines in 

<link id="a1047" target-id="Figure_3">

Figure 3

</link>

.) 

</emphasis>

Each 
large numeric value that you see in Line 4 is the number of milliseconds since 
January 1, 1970 for a particular date and time. These values in milliseconds are translated into actual dates 
and times and shown in Lines 6 through 9.

</para>




<para id="p1048">
<emphasis id="strong1029" effect="bold">
No special software requirements

</emphasis>
</para>




<para id="p1049">
This approach places no special requirements on the server software other 
than the ability to support Java servlets. The approach should be compatible with all browsers that support hyperlinks.

</para>




<section id="h31002">
<title>
<emphasis id="Interesting_code_fragments" effect="bold">

Interesting code fragments

</emphasis>


</title>




<para id="p1050">
<emphasis id="strong1030" effect="bold">
Beginning of the doGet method

</emphasis>
</para>




<para id="p1051">
As mentioned earlier, I will explain this program in fragments. 

<link id="a1048" target-id="Listing_1">

Listing 1

</link>

 shows the beginning of the controlling class and the beginning of 
the 

<emphasis id="strong1031" effect="bold">
doGet

</emphasis>
 method. You have seen code like this before, so I 
won't discuss it further.

</para>


	

<table id="table1000" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

 - Beginning of the doGet 
				method.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">

				

<code id="pre1000" display="block">import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class Java4560a extends HttpServlet{
  public void doGet(HttpServletRequest request, 
                    HttpServletResponse response)
                      throws ServletException, IOException{
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1052">
<emphasis id="strong1032" effect="bold">
Get and save URL parameters named item

</emphasis>
</para>




<para id="p1053">
An HTTP URL can have multiple parameters with the same name. In this 
	case, all of the parameters are named 

<emphasis id="strong1033" effect="bold">
item

</emphasis>
. 

<link id="a1049" target-id="Listing_2">

Listing 2

</link>

 gets the 
	values stored in all of the parameters named 

<emphasis id="strong1034" effect="bold">
item

</emphasis>
 
	and saves them in a 

<emphasis id="strong1035" effect="bold">
String 

</emphasis>
array named 

<emphasis id="strong1036" effect="bold">
items

</emphasis>
.

</para>




<para id="p1054">
<emphasis id="em1003" effect="italics">
(Each time the servlet is called, the size of the list of parameters 
increases by one.)

</emphasis>
</para>




<para id="p1055">
The fragment also instantiates and initializes a 

<emphasis id="strong1037" effect="bold">
String 

</emphasis>

object used later to construct a new parameter string for the URL.

</para>




	

<table id="table1001" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Listing_2" effect="bold">

Listing 2

</emphasis>

 - Get and save URL 
				parameters named item.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">

				

<code id="pre1001" display="block">
    String parameters = "?";
    String[] items = request.getParameterValues("item");
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1056">
<emphasis id="strong1038" effect="bold">
Construct the new parameter string

</emphasis>
</para>




<para id="p1057">
<link id="a1050" target-id="Listing_3">

Listing 3

</link>

 uses the parameter values from the old parameter string to 
	construct a new parameter string. The new parameter string will later be 
	concatenated to the URL for the servlet.

</para>





<para id="p1058">
<emphasis id="strong1039" effect="bold">
<emphasis id="Listing_3" effect="bold">

Listing 3

</emphasis>

 - Construct the new 
				parameter string.

</emphasis>
</para>




<para id="p1059">
<media id="media1003" alt="Missing Figure" display="block">
<image id="img1003" mime-type="image/jpeg" src="../../media/java4560a-b03.jpg" width="479" height="90"/>
</media>


</para>



	

<para id="p1060">
<emphasis id="strong1040" effect="bold">
Concatenate current date and time to new parameter string

</emphasis>
</para>




<para id="p1061">
<link id="a1051" target-id="Listing_4">

Listing 4

</link>

 gets the current date and time in milliseconds and saves it in 
	a 

<emphasis id="strong1041" effect="bold">
long

</emphasis>
 variable named 

<emphasis id="strong1042" effect="bold">
theDate

</emphasis>
. 
	Then it concatenates the current date and time in milliseconds onto the new 
	parameter string that was constructed in 

<link id="a1052" target-id="Listing_3">

Listing 3

</link>

.

</para>




	

<table id="table1002" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Listing_4" effect="bold">

Listing 4

</emphasis>

 - Concatenate current date 
				and time to new parameter string.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">

				

<code id="pre1002" display="block">    long theDate = new Date().getTime();
    parameters = parameters + "item=" + theDate;
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1062">
<emphasis id="strong1043" effect="bold">
Begin creation of the HTML page

</emphasis>
</para>




<para id="p1063">
<link id="a1053" target-id="Listing_5">

Listing 5

</link>

 begins the creation of the output HTML page. You have seen code 
	like this before, so I won't discuss it further at this point.

</para>




	

<table id="table1003" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Listing_5" effect="bold">

Listing 5

</emphasis>

 - Begin creation of the 
				HTML page.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">

				

<code id="pre1003" display="block">    //Establish the type of output
    response.setContentType("text/html");
    
    //Get an output stream
    PrintWriter out = response.getWriter();
    
    //Construct an HTML page and send it back to the client
    out.println("&lt;html&gt;");
    out.println("&lt;head&gt;&lt;title&gt;Java4560a&lt;/title&gt;&lt;/head&gt;");
    out.println("&lt;body&gt;");
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1064">
<emphasis id="strong1044" effect="bold">
Construct the new hyperlink

</emphasis>
</para>




<para id="p1065">
<link id="a1054" target-id="Listing_6">

Listing 6

</link>

 constructs the hyperlink containing the URL for the servlet. 
	Note that the hyperlink references a URL that includes the parameter string 
	constructed above.

</para>




<para id="p1066">
If you compile and run this servlet, you may need to substitute the name of 
your server in place of my server.

</para>


	


	

<table id="table1004" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Listing_6" effect="bold">

Listing 6

</emphasis>

 - Construct the hyperlink.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">

				

<code id="pre1004" display="block">    out.println("&lt;a href='http://localhost:8080/Java4560a" 
                        + parameters + "'&gt;Click Here&lt;/a&gt;")
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1067">
<emphasis id="strong1045" effect="bold">
Introductory text

</emphasis>
</para>




<para id="p1068">
<link id="a1055" target-id="Listing_7">

Listing 7

</link>

 provides a line of introductory text for the list of 
	dates and times to be displayed on the screen.

</para>




	

<table id="table1005" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Listing_7" effect="bold">

Listing 7

</emphasis>

 - Introductory text.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">

				

<code id="pre1005" display="block">    out.println("&lt;br/&gt;&lt;br/&gt;Your list of times is:&lt;br/&gt;");
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1069">
<emphasis id="strong1046" effect="bold">
Display date and time history

</emphasis>
</para>




<para id="p1070">
<link id="a1056" target-id="Listing_2">

Listing 2

</link>

 retrieved all of the data in the incoming URL 
	parameters and saved that data in a 

<emphasis id="strong1047" effect="bold">
String

</emphasis>
 array named
	

<emphasis id="strong1048" effect="bold">
items

</emphasis>
.

</para>




<para id="p1071">
If that array contains data, 

<link id="a1057" target-id="Listing_8">

Listing 8

</link>

 displays the date and time for 
each element in the array. 

</para>




<para id="p1072">
The parameter values in milliseconds are first converted from 

<emphasis id="strong1049" effect="bold">
String

</emphasis>
 
to 

<emphasis id="strong1050" effect="bold">
long

</emphasis>
. Each of the 

<emphasis id="strong1051" effect="bold">
long

</emphasis>
 values is then used 
to instantiate a new 

<emphasis id="strong1052" effect="bold">
Date

</emphasis>
 object, which is displayed in the 
format shown in 

<link id="a1058" target-id="Figure_2">

Figure 2

</link>

.

</para>




	

<table id="table1006" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1006">

			

<row id="tr1012">

				

<entry id="th1006">
<emphasis id="Listing_8" effect="bold">

Listing 8

</emphasis>

 - Display date and time 
				history.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1006">

			

<row id="tr1013">

				

<entry id="td1006">

				

<code id="pre1006" display="block">    if(items != null){
      for(int i = 0; i &lt; items.length; i++){
        long millis = Long.parseLong(items[i]);
        out.println("" + new Date(millis) + "&lt;br/&gt;");
      }//end for loop
    }//end if
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<quote id="blockquote1000" display="block">
<emphasis id="em1004" effect="italics">
(Hopefully you already understand the relationship between 
	the overridden 

<emphasis id="strong1053" effect="bold">
toString

</emphasis>
 method of the 

<emphasis id="strong1054" effect="bold">
Date

</emphasis>
 
	class and the format resulting from passing a 

<emphasis id="strong1055" effect="bold">
Date

</emphasis>
 object's 
	reference to the 

<emphasis id="strong1056" effect="bold">
println

</emphasis>
 method. If not, see 

</emphasis>

	

<link id="a1059" url="http://cnx.org/content/m45252/latest/?collection=col11441/latest">


	

<emphasis id="em1005" effect="italics">
Ap0005: Preface to OOP Self-Assessment

</emphasis>
</link>


<emphasis id="em1006" effect="italics">
 and the modules 
	following that one.)

</emphasis>
</quote>




<para id="p1073">
<emphasis id="strong1057" effect="bold">
Display the current date and time

</emphasis>
</para>




<para id="p1074">
<link id="a1060" target-id="Listing_4">

Listing 4

</link>

 obtained the current date and time in milliseconds and saved it 
	in a variable named 

<emphasis id="strong1058" effect="bold">
theDate

</emphasis>
. 

<link id="a1061" target-id="Listing_9">

Listing 9

</link>

 uses that value to 
	instantiate and display a new 

<emphasis id="strong1059" effect="bold">
Date

</emphasis>
 object reflecting the current date and 
	time.

</para>




	

<table id="table1007" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1007">

			

<row id="tr1014">

				

<entry id="th1007">
<emphasis id="Listing_9" effect="bold">

Listing 9

</emphasis>

 - Display the current date 
				and time.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1007">

			

<row id="tr1015">

				

<entry id="td1007">

				

<code id="pre1007" display="block">    out.println("" + new Date(theDate) + "&lt;br/&gt;");
    out.println("&lt;/body&gt;&lt;/html&gt;");//finish HTML page
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1075">
<link id="a1062" target-id="Listing_9">

Listing 9

</link>

 also creates the HTML code necessary to finish the HTML page.

</para>




</section>
</section>
<section id="h21002">
<title>
<emphasis id="The_JSP_program" effect="bold">

The JSP program

</emphasis>


</title>




<para id="p1076">
I will also discuss the JSP program named 

<emphasis id="strong1060" effect="bold">
Java4560b.jsp

</emphasis>
 
in fragments. A complete listing of the program is provided in 

<link id="a1063" target-id="Listing_17">

Listing 17

</link>

. 

</para>




<section id="h31003">
<title>
<emphasis id="Interestingcodefragments2" effect="bold">

Interesting code fragments

</emphasis>


</title>




<para id="p1077">
<emphasis id="strong1061" effect="bold">
Import necessary packages

</emphasis>
</para>




<para id="p1078">
<link id="a1064" target-id="Listing_10">

Listing 10

</link>

 shows the necessary import directives plus the beginning of the 
HTML page. 

</para>




	

<table id="table1008" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1008">

			

<row id="tr1016">

				

<entry id="th1008">
<emphasis id="Listing_10" effect="bold">

Listing 10

</emphasis>

 - Import necessary 
				packages.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1008">

			

<row id="tr1017">

				

<entry id="td1008">

				

<code id="pre1008" display="block">&lt;%@ page import='java.util.*,java.io.*' %&gt;

&lt;html&gt;
&lt;head&gt;&lt;title&gt;Java4560b&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1079">
There's nothing new in 

<link id="a1065" target-id="Listing_10">

Listing 10

</link>

 with the possible exception of 
	the format 
	of the import directives. The format is different from the format 
	used in regular Java code. 

<emphasis id="em1007" effect="italics">
(See 

<link id="a1066" target-id="Listing_1">

Listing 1

</link>

.)

</emphasis>
 

</para>




<para id="p1080">
<emphasis id="strong1062" effect="bold">
Some packages are imported automatically

</emphasis>
</para>




<para id="p1081">
Recall from


<link id="a1067" url="http://cnx.org/content/m48284/latest/?collection=col11441/latest">


Java4307: Servlets and JSP

</link>

 that it is 
	not necessary to import 

<emphasis id="strong1063" effect="bold">
javax.servlet

</emphasis>
 and 

<emphasis id="strong1064" effect="bold">
javax.servlet.http

</emphasis>
. 
	Those two packages are automatically imported by the JSP container on the 
	server. No page directive import settings are required for using the classes 
defined in these packages.

</para>




<para id="p1082">
<emphasis id="strong1065" effect="bold">
Get data from the old parameter string

</emphasis>
</para>




<para id="p1083">
<link id="a1068" target-id="Listing_11">

Listing 11

</link>

 shows the beginning of a scriptlet containing pure Java code.

</para>




	


	

<table id="table1009" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1009">

			

<row id="tr1018">

				

<entry id="th1009">
<emphasis id="Listing_11" effect="bold">

Listing 11

</emphasis>

 - Get data from the old 
				parameter string.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1009">

			

<row id="tr1019">

				

<entry id="td1009">

				

<code id="pre1009" display="block">&lt;%
    String parameters = "?";
    String[] items = request.getParameterValues("item");

</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1084">
The code in 

<link id="a1069" target-id="Listing_11">

Listing 11

</link>

  declares and initializes a 
	

<emphasis id="strong1066" effect="bold">
String

</emphasis>
 that will be 
	used later to construct a new parameter string. 

</para>




<para id="p1085">
<link id="a1070" target-id="Listing_11">

Listing 11

</link>

 also gets and saves the values of all of the parameters from the 
old parameter string named 

<emphasis id="em1008" effect="italics">
"item"

</emphasis>
.

</para>




<para id="p1086">
<emphasis id="strong1067" effect="bold">
Construct a new parameter string

</emphasis>
</para>




<para id="p1087">
<link id="a1071" target-id="Listing_12">

Listing 12

</link>

 constructs a new parameter string containing the names and values 
of all the parameters named 

<emphasis id="em1009" effect="italics">
"item"

</emphasis>
 in the old parameter string. 

<emphasis id="em1010" effect="italics">
(A 
parameter for the current date and time will be concatenated later.)

</emphasis>
</para>





<para id="p1088">
<emphasis id="strong1068" effect="bold">
<emphasis id="Listing_12" effect="bold">

Listing 12

</emphasis>

 - Construct a new 
				parameter string.

</emphasis>
</para>




<para id="p1089">
<media id="media1004" alt="Missing Figure" display="block">
<image id="img1004" mime-type="image/jpeg" src="../../media/java4560a-b12.jpg" width="477" height="81"/>
</media>


</para>



	

<para id="p1090">
<emphasis id="strong1069" effect="bold">
Concatenate current date and time to the parameter string

</emphasis>
</para>




<para id="p1091">
<link id="a1072" target-id="Listing_13">

Listing 13

</link>

 gets the current date and time in 
milliseconds and 
	concatenates it to the new parameter string with the name 

<emphasis id="em1011" effect="italics">
"item"

</emphasis>
.

</para>





	

<table id="table1010" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1010">

			

<row id="tr1020">

				

<entry id="th1010">
<emphasis id="Listing_13" effect="bold">

Listing 13

</emphasis>

 - Concatenate current 
				date and time to the parameter string.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1010">

			

<row id="tr1021">

				

<entry id="td1010">



<code id="pre1010" display="block">
    long theDate = new Date().getTime();
    parameters = parameters + "item=" + theDate;
    
    response.setContentType("text/html");
%%&gt;
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1092">
<link id="a1073" target-id="Listing_13">

Listing 13

</link>

 also sets the output content type to 

<emphasis id="em1012" effect="italics">
"text/html"

</emphasis>
. 
	

</para>




<para id="p1093">
Finally, 

<link id="a1074" target-id="Listing_13">

Listing 13

</link>

 signals the end of the scriptlet that began in 

<link id="a1075" target-id="Listing_11">

Listing 11

</link>

.

</para>




<para id="p1094">
<emphasis id="strong1070" effect="bold">
Create the hyperlink

</emphasis>
</para>




<para id="p1095">
<link id="a1076" target-id="Listing_14">

Listing 14

</link>

 uses a JSP 

<emphasis id="em1013" effect="italics">
expression

</emphasis>
 tag along with raw HTML code to 
create the hyperlink shown near the top of the page in 

<link id="a1077" target-id="Figure_2">

Figure 2

</link>

.

</para>





<para id="p1096">
<emphasis id="strong1071" effect="bold">
<emphasis id="Listing_14" effect="bold">

Listing 14

</emphasis>

 - Create the hyperlink.

</emphasis>
</para>




<para id="p1097">
<media id="media1005" alt="Missing Figure" display="block">
<image id="img1005" mime-type="image/jpeg" src="../../media/java4560a-b14.jpg" width="496" height="66"/>
</media>


</para>



	

<para id="p1098">
<link id="a1078" target-id="Listing_14">

Listing 14

</link>

 also uses raw HTML code to create the line of text that 
	appears immediately above the list of dates in 

<link id="a1079" target-id="Figure_2">

Figure 2

</link>

.

</para>




<para id="p1099">
<emphasis id="strong1072" effect="bold">
Display the list of dates

</emphasis>
</para>




<para id="p1100">
<link id="a1080" target-id="Listing_15">

Listing 15

</link>

  shows another scriptlet containing pure Java code. The first six lines 
of code display the historical date and time information. The next line of code 
displays the current date and time.

</para>





	

<table id="table1011" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1011">

			

<row id="tr1022">

				

<entry id="th1011">
<emphasis id="Listing_15" effect="bold">

Listing 15

</emphasis>

 - Display the list of 
				dates.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1011">

			

<row id="tr1023">

				

<entry id="td1011">

				

<code id="pre1011" display="block">&lt;%
    if(items != null){
      for(int i = 0; i &lt; items.length; i++){
        long millis = Long.parseLong(items[i]);
        out.println("" + new Date(millis) + "&lt;br/&gt;");
      }//end for loop
    }//end if

    out.println("" + new Date(theDate) + "&lt;br/&gt;");
    out.println("&lt;/body&gt;&lt;/html&gt;");
%%&gt;
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1101">
The last line of code creates the HTML elements necessary to finish the 
	page.

</para>




<para id="p1102">
<emphasis id="strong1073" effect="bold">
A choice

</emphasis>
</para>




<para id="p1103">
I could have broken this scriptlet into two or more scriptlets using raw HTML 
code in between to display the material. However, I decided that it was simpler 
in this case to use Java 

<emphasis id="strong1074" effect="bold">
println

</emphasis>
 statements to display the material than it 
would have been to break it up and use interspersed HTML code.

</para>





</section>
</section>
</section>
<section id="h11004">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the programs

</emphasis>


</title>





<para id="p1104">
I encourage you to copy the code from 

<link id="a1081" target-id="Listing_16">

Listing 16

</link>

 and 

<link id="a1082" target-id="Listing_17">

Listing 17

</link>

. Install 
the programs on your server and run them. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>


	

</section>
<section id="h11005">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1105">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1075" effect="bold">
Housekeeping material

</emphasis>


				

<list id="ul1009" list-type="bulleted">

					

<item id="li1035">
Module name: Java4560: Session Tracking using URL 
					Rewriting

</item>


					

<item id="li1036">
File: Java4560.htm


</item>


					

<item id="li1037">
Published: 12/23/13

</item>


					

<item id="li1038">
Revised: 01/31/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1076" effect="bold">
Disclaimers:

</emphasis>
<para id="p1106">
<emphasis id="strong1077" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1107">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1108">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1109">
<emphasis id="strong1078" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	






</section>
<section id="h11006">
<title>
<emphasis id="Complete_program_listing" effect="bold">

Complete program listings

</emphasis>


</title>





<para id="p1110">
I recognize that the code in 

<link id="a1083" target-id="Listing_16">

Listing 16

</link>

 may be difficult to read. Note, however 
that if you have difficulty reading it, you can reconstruct the entire program 
from the code fragments provided earlier. You might also try zooming with your 
browser to see if that makes it easier to read.

</para>





<para id="p1111">
<emphasis id="strong1079" effect="bold">
<emphasis id="Listing_16" effect="bold">

Listing 16

</emphasis>

 - The servlet named Java4560a.java.

</emphasis>
</para>




<para id="p1112">
<media id="media1006" alt="Missing Figure" display="block">
<image id="img1006" mime-type="image/jpeg" src="../../media/java4560a-b16.jpg" width="315" height="844"/>
</media>


</para>






<para id="p1113">
<emphasis id="strong1080" effect="bold">
<emphasis id="Listing_17" effect="bold">

Listing 17

</emphasis>

 - The JSP program named Java4560b.jsp.

</emphasis>
</para>




<para id="p1114">
<media id="media1007" alt="Missing Figure" display="block">
<image id="img1007" mime-type="image/jpeg" src="../../media/java4560a-b17.jpg" width="510" height="579"/>
</media>


</para>





<para id="p1115">
-end- 

</para>






</section>
</content>




</document>