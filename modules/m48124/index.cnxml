<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Java4100r: Review</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m48124</md:content-id>
  <md:title>Java4100r: Review</md:title>
  <md:abstract>This module contains review questions and answers keyed to the module titled Java4100: The Comparator Interface, Part 2.</md:abstract>
  <md:uuid>69515d38-a462-4767-9941-bc6e9a670347</md:uuid>
</metadata>

<content>






<para id="p1000">
Revised: Thu Apr 07 11:03:31 CDT 2016

</para>




<para id="p1001">
<emphasis id="em1000" effect="italics">
This page is included in the following Books:

</emphasis>
</para>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">

	

<link id="a1000" url="http://cnx.org/contents/dzOvxPFw">


<emphasis id="em1001" effect="italics">
ITSE 2321 - Object-Oriented Programming (Java)

</emphasis>
</link>


</item>


	

<item id="li1001">

	

<link id="a1001" url="http://cnx.org/contents/-2RmHFs_">


<emphasis id="em1002" effect="italics">
Object-Oriented Programming (OOP) with Java 
	

</emphasis>
 
	

</link>

 

</item>




</list>














<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1001" list-type="bulleted">

	

<item id="li1002">
<link id="a1002" target-id="Preface">

Preface

</link>


</item>


	

<item id="li1003">
<link id="a1003" target-id="Questions">

Questions

</link>


	

<list id="ul1002" list-type="bulleted">

		

<item id="li1004">
<link id="a1004" target-id="question01">

1

</link>

, 

<link id="a1005" target-id="question02">

2

</link>

,
		

<link id="a1006" target-id="question03">

3

</link>

, 

<link id="a1007" target-id="question04">

4

</link>

,
		

<link id="a1008" target-id="question05">

5

</link>


</item>


	

</list>


	

</item>


	

<item id="li1005">
<link id="a1009" target-id="Listings">

Listings

</link>


</item>


	

<item id="li1006">
<link id="a1010" target-id="Answers">

Answers

</link>


</item>


	

<item id="li1007">
<link id="a1011" target-id="Complete_program_listing">

Complete program listing

</link>


</item>


	

<item id="li1008">
<link id="a1012" target-id="Miscellaneous">

Miscellaneous

</link>


</item>




</list>




</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>




<para id="p1002">
This module is one in a collection of modules on Java Collections designed for 
teaching 

<emphasis id="em1003" effect="italics">
ITSE2321 - Object-Oriented Programming (Java)

</emphasis>
 at Austin Community 
College in Austin, TX.

</para>





<para id="p1003">
This module contains review questions and answers keyed to the module titled


<link id="a1013" url="http://cnx.org/contents/WXdj2vxV">

Java4100: The Comparator Interface, Part 2

</link>

.

</para>





<para id="p1004">
Once you study that module, you should be able to answer the review 
questions in this module.

</para>





<para id="p1005">
The questions and the answers in this module are connected by hyperlinks to 
make it easy for you to navigate from the question to the answer and back again.

</para>






</section>
<section id="h11002">
<title>
<emphasis id="Questions" effect="bold">

Questions

</emphasis>


</title>





<section id="h21000">
<title>
<emphasis id="question01" effect="bold">

Question 1

</emphasis>


<emphasis id="strong1000" effect="bold">
. 

</emphasis>
 

</title>




<para id="p1006">
What output is produced by the program shown in 

<link id="a1014" target-id="Listing_1">

Listing 
1

</link>

? 

</para>





<list id="ul1003" list-type="bulleted">

	

<item id="li1009">
Compiler Error

</item>


	

<item id="li1010">
Runtime Error

</item>


	

<item id="li1011">
Joe Bill Tom JOE BILL TOM

</item>


	

<item id="li1012">
Tom TOM Joe JOE Bill BILL

</item>


	

<item id="li1013">
Joe Bill Tom

</item>


	

<item id="li1014">
None of the above.

</item>




</list>






<para id="p1007">
<link id="a1015" target-id="answer01">

Answer 1

</link>

 

</para>






</section>
<section id="h21001">
<title>
<emphasis id="question02" effect="bold">

Question 2

</emphasis>


</title>




<para id="p1008">
True or False? By using a 

<emphasis id="strong1001" effect="bold">
Comparator

</emphasis>
 object, you can achieve 
comparisons and sort orders that are different from the 

<emphasis id="em1004" effect="italics">
natural ordering

</emphasis>
 
for a given element type.

</para>





<para id="p1009">
<link id="a1016" target-id="answer02">

Answer 2

</link>

 

</para>






</section>
<section id="h21002">
<title>
<emphasis id="question03" effect="bold">

Question 3

</emphasis>

 

</title>




<para id="p1010">
True or False? The first time the 

<emphasis id="strong1002" effect="bold">
fillIt

</emphasis>
 method is called in 

<link id="a1017" target-id="Listing_1">

Listing 
1

</link>

, the 

<emphasis id="strong1003" effect="bold">
TreeSet

</emphasis>
 collection referred to by the incoming 
parameter named 

<emphasis id="strong1004" effect="bold">
ref

</emphasis>
 is populated with the following names in 
the following order:

</para>





<para id="p1011">
<emphasis id="strong1005" effect="bold">
Joe Bill Tom JOE BILL TOM

</emphasis>
</para>





<para id="p1012">
<link id="a1018" target-id="answer03">

Answer 3

</link>

 

</para>






</section>
<section id="h21003">
<title>
<emphasis id="question04" effect="bold">

Question 4

</emphasis>


</title>




<para id="p1013">
True or False? The second time the 

<emphasis id="strong1006" effect="bold">
fillIt

</emphasis>
 method is called 
in 

<link id="a1019" target-id="Listing_1">

Listing 
1

</link>

, the 

<emphasis id="strong1007" effect="bold">
TreeSet

</emphasis>
 collection referred to by the incoming 
parameter named 

<emphasis id="strong1008" effect="bold">
ref

</emphasis>
 is populated with the following names in 
the following order:

</para>





<para id="p1014">
<emphasis id="strong1009" effect="bold">
Bill Bill Joe Joe Tom Tom

</emphasis>
</para>





<para id="p1015">
<link id="a1020" target-id="answer04">

Answer 4

</link>

 

</para>






</section>
<section id="h21004">
<title>
<emphasis id="question05" effect="bold">

Question 5

</emphasis>


</title>




<para id="p1016">
Explain why the second time the 

<emphasis id="strong1010" effect="bold">
fillIt

</emphasis>
 method is 
called in 

<link id="a1021" target-id="Listing_1">

Listing 
1

</link>

, the 

<emphasis id="strong1011" effect="bold">
TreeSet

</emphasis>
 collection referred to by the incoming 
parameter named 

<emphasis id="strong1012" effect="bold">
ref

</emphasis>
 is populated with the following names in 
the following order:

</para>





<para id="p1017">
<emphasis id="strong1013" effect="bold">
Bill Joe Tom

</emphasis>
</para>





<para id="p1018">
<link id="a1022" target-id="answer05">

Answer 5

</link>


</para>






</section>
</section>
<section id="h11003">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1015">
<link id="a1023" target-id="Listing_1">

Listing 1

</link>

. Comparator03.java. 

</item>


	

</list>





<para id="p1019">
<emphasis id="strong1014" effect="bold">
What is the meaning of the following two images?

</emphasis>
</para>





<para id="p1020">
These images were inserted here simply to insert some space between the 
questions and the answers to keep them from being visible on the screen at the 
same time. 

</para>






<media id="media1000" alt="Spacer image of a rabbit and a penguin." display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/Spacer01.jpg" width="339" height="290"/>
</media>





<para id="p1021">
This image was also inserted for the purpose of inserting space between the questions and the answers.

</para>





<para id="p1022">



<media id="media1001" alt="Spacer image of a penguin and some houses." display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/Spacer02.jpg" width="374" height="308"/>
</media>


</para>








</section>
<section id="h11004">
<title>
<emphasis id="Answers" effect="bold">

Answers

</emphasis>


</title>







<section id="h21005">
<title>
<emphasis id="answer05" effect="bold">

Answer 5

</emphasis>


</title>




<para id="p1023">
A 

<emphasis id="strong1015" effect="bold">
Comparator

</emphasis>
 object's reference is passed to the 

<emphasis id="strong1016" effect="bold">

TreeSet

</emphasis>
 constructor when the second 

<emphasis id="strong1017" effect="bold">
TreeSet

</emphasis>
 object is 
instantiated. The 

<emphasis id="strong1018" effect="bold">
Comparator

</emphasis>
 is designed to eliminate the 
distinction between upper-case and lower-case characters when each new element 
is compared with the existing elements. This causes the last three names to be 
treated as duplicates of the first three names so they are not added to the 
collection. As a result, the collection ends up containing only the first three 
names that are added.

</para>





<para id="p1024">
<link id="a1024" target-id="question05">

Back to Question 5

</link>

 

</para>





</section>
<section id="h21006">
<title>
<emphasis id="answer04" effect="bold">

Answer 4

</emphasis>

 

</title>




<para id="p1025">
False. The second time the 

<emphasis id="strong1019" effect="bold">
fillIt

</emphasis>
 method is called in 

<link id="a1025" target-id="Listing_1">

Listing 
1

</link>

, the 

<emphasis id="strong1020" effect="bold">
TreeSet

</emphasis>
 collection referred to by the incoming 
parameter named 

<emphasis id="strong1021" effect="bold">
ref

</emphasis>
 is populated with the following names in 
the following order with duplicate elements eliminated:

</para>





<para id="p1026">
<emphasis id="strong1022" effect="bold">
Bill Joe Tom

</emphasis>
</para>





<para id="p1027">
<link id="a1026" target-id="question04">

Back to Question 4

</link>

 

</para>





</section>
<section id="h21007">
<title>
<emphasis id="answer03" effect="bold">

Answer 3

</emphasis>

 

</title>




<para id="p1028">
False. The first time the 

<emphasis id="strong1023" effect="bold">
fillIt

</emphasis>
 method is called in 

<link id="a1027" target-id="Listing_1">

Listing 
1

</link>

, the 

<emphasis id="strong1024" effect="bold">
TreeSet

</emphasis>
 collection referred to by the incoming 
parameter named 

<emphasis id="strong1025" effect="bold">
ref

</emphasis>
 is populated with the following names in 
the following 

<emphasis id="em1005" effect="italics">
natural order

</emphasis>
 for 

<emphasis id="strong1026" effect="bold">
String

</emphasis>
 objects. 
The 

<emphasis id="strong1027" effect="bold">
String

</emphasis>
 class implements the 

<emphasis id="strong1028" effect="bold">
Comparable

</emphasis>
 
interface, and that is what determines the sorted order in this case.

</para>





<para id="p1029">
<emphasis id="strong1029" effect="bold">
BILL Bill JOE Joe TOM Tom

</emphasis>
</para>






<para id="p1030">
<link id="a1028" target-id="question03">

Back to Question 3

</link>

 

</para>





</section>
<section id="h21008">
<title>
<emphasis id="answer02" effect="bold">

Answer 2

</emphasis>


</title>




<para id="p1031">
True.

</para>





<para id="p1032">
<link id="a1029" target-id="question02">

Back to Question 2

</link>

 

</para>







</section>
<section id="h21009">
<title>
<emphasis id="answer01" effect="bold">

Answer 1

</emphasis>

 

</title>




<para id="p1033">
None of the above. 

</para>





<para id="p1034">
The output produced by the program shown in 

<link id="a1030" target-id="Listing_1">

Listing 1

</link>

 
is four lines long as shown below. 

<emphasis id="em1006" effect="italics">
(Note that the bullets shown below do not 
appear in the actual program output.)

</emphasis>
 

</para>





<list id="ul1005" list-type="bulleted">

	

<item id="li1016">
<emphasis id="strong1030" effect="bold">
Natural ordering

</emphasis>
</item>


	

<item id="li1017">
<emphasis id="strong1031" effect="bold">
BILL Bill JOE Joe TOM Tom

</emphasis>
</item>


	

<item id="li1018">
<emphasis id="strong1032" effect="bold">
Comparator in use

</emphasis>
</item>


	

<item id="li1019">
<emphasis id="strong1033" effect="bold">
Bill Joe Tom

</emphasis>
 

</item>




</list>




<para id="p1035">
<link id="a1031" target-id="question01">

Back to Question 1

</link>

 

</para>





</section>
</section>
<section id="h11005">
<title>
<emphasis id="Complete_program_listing" effect="bold">

Complete program listing

</emphasis>


</title>









<table id="table1000" summary="A table." pgwide="0">
<tgroup cols="1">





<thead id="thead1000">



<row id="tr1000">



<entry id="th1000">



<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. 

<emphasis id="strong1034" effect="bold">
Comparator03.java

</emphasis>
.


</entry>



</row>



</thead>





<tbody id="tbody1000">



<row id="tr1001">



<entry id="td1000">



<code id="pre1000" display="block">//File Comparator03.java
//Copyright 2001 R.G.Baldwin
import java.util.*;
import java.io.Serializable;

public class Comparator03{
  public static void main(String args[]){
    new Worker().doIt();
  }//end main()
}//end class Comparator03

class Worker{
  public void doIt(){
    Iterator iter;
    Collection ref;
    System.out.println("Natural ordering");
    ref = new TreeSet();
    Populator.fillIt(ref);
    iter = ref.iterator();
    while(iter.hasNext()){
      System.out.print(iter.next() + " ");
    }//end while loop
    System.out.println();

    System.out.println("Comparator in use");
    ref = new TreeSet(new TheComparator());
    Populator.fillIt(ref);
    iter = ref.iterator();
    while(iter.hasNext()){
      System.out.print(iter.next() + " ");
    }//end while loop
    System.out.println();

  }//end doIt()
}// end class Worker

class Populator{
  public static void fillIt(Collection ref){
    ref.add("Joe");
    ref.add("Bill");
    ref.add("Tom");
    ref.add("JOE");
    ref.add("BILL");
    ref.add("TOM");
  }//end fillIt()
}//end class Populator

class TheComparator
        implements Comparator,Serializable{

  public int compare(Object o1,Object o2){
    if(!(o1 instanceof String))
        throw new ClassCastException();
    if(!(o2 instanceof String))
        throw new ClassCastException();

    //Do an upper-case comparison
    int result =
            ((String)o1).toUpperCase().
                compareTo(((String)o2).
                        toUpperCase());
    return result;
  }//end compare()

  public boolean equals(Object o){
    if(!(o instanceof TheComparator))
        return false;
    else return true;
  }//end overridden equals()
}//end class TheComparator
</code>





</entry>



</row>



</tbody>





</tgroup>
</table>






</section>
<section id="h11006">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>




<para id="p1036">
This section contains a variety of miscellaneous information. 

</para>





	

<note id="note1000" type="">


		


			

<emphasis id="strong1035" effect="bold">
Housekeeping material

</emphasis>

			

<list id="ul1006" list-type="bulleted">

				

<item id="li1020">
Module name: Java4100r: Review

</item>


				

<item id="li1021">
File: Java4100r.htm 

</item>


				

<item id="li1022">
Published: 12/01/13

</item>


			

</list>


			

</note>

		








	

<note id="note1001" type="">


		


			

<emphasis id="strong1036" effect="bold">
Disclaimers:

</emphasis>
<para id="p1037">
<emphasis id="strong1037" effect="bold">
Financial

</emphasis>
: 
			Although the Connexions site makes it possible for you to download a 
			PDF file for this module at no charge, and also makes it possible 
			for you to purchase a pre-printed version of the PDF file, you 
			should be aware that some of the HTML elements in this module may 
			not translate well into PDF.

</para>



			

<para id="p1038">
I also want you to know that, I receive no financial compensation 
			from the Connexions website even if you purchase the PDF version of 
			the module.

</para>



			

<para id="p1039">
In the past, unknown individuals have copied my modules from 
			cnx.org, converted them to Kindle books, and placed them for sale on 
			Amazon.com showing me as the author. I neither receive compensation 
			for those sales nor do I know who does receive compensation. If you 
			purchase such a book, please be aware that it is a copy of a module 
			that is freely available on cnx.org and that it was made and 
			published without my prior knowledge.

</para>



			

<para id="p1040">
<emphasis id="strong1038" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer 
			Information Technology at Austin Community College in Austin, TX.
			

</para>



			

</note>

		









<para id="p1041">
-end- 

</para>












</section>
</content>




</document>