<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Java3018r Review</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m45782</md:content-id>
  <md:title>Java3018r Review</md:title>
  <md:abstract>This module contains review questions and answers keyed to the module titled Java3018: Darkening, Brightening, and Tinting the Colors in a Picture.</md:abstract>
  <md:uuid>ef001479-e555-474a-a973-c270a3ed1881</md:uuid>
</metadata>

<content>






<para id="p1000">
Revised: Sun Apr 03 17:16:35 CDT 2016

</para>




<para id="p1001">
<emphasis id="em1000" effect="italics">
This page is included in the following Books:

</emphasis>
</para>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">

	

<link id="a1000" url="http://cnx.org/contents/dzOvxPFw">


<emphasis id="em1001" effect="italics">
ITSE 2321 - Object-Oriented Programming (Java)

</emphasis>
</link>


</item>


	

<item id="li1001">

	

<link id="a1001" url="http://cnx.org/contents/-2RmHFs_">


<emphasis id="em1002" effect="italics">
Object-Oriented Programming (OOP) with Java 
	

</emphasis>
 
	

</link>

 

</item>




</list>














<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1001" list-type="bulleted">

	

<item id="li1002">
<link id="a1002" target-id="Preface">

Preface

</link>


</item>


	

<item id="li1003">
<link id="a1003" target-id="Questions">

Questions

</link>


	

<list id="ul1002" list-type="bulleted">

		

<item id="li1004">
<link id="a1004" target-id="question01">

1

</link>


</item>


	

</list>


	

</item>


	

<item id="li1005">
<link id="a1005" target-id="Figures">

Figures

</link>


</item>


	

<item id="li1006">
<link id="a1006" target-id="Listings">

Listings

</link>


</item>


	

<item id="li1007">
<link id="a1007" target-id="Answers">

Answers

</link>


</item>


	

<item id="li1008">
<link id="a1008" target-id="Miscellaneous">

Miscellaneous

</link>


</item>




</list>




</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>




<para id="p1002">
This module contains review questions and answers keyed to the module titled 


<link id="a1009" url="http://cnx.org/content/m44234">

Java3018: Darkening, Brightening, and Tinting the Colors in a Picture

</link>

.

</para>





<para id="p1003">
The questions and the answers are connected by hyperlinks to make it easy for 
you to navigate from the question to the answer and back again.

</para>





</section>
<section id="h11002">
<title>
<emphasis id="Questions" effect="bold">

Questions

</emphasis>


</title>





<section id="h21000">
<title>
<emphasis id="question01" effect="bold">

Question 1

</emphasis>


<emphasis id="strong1000" effect="bold">
. 

</emphasis>
 

</title>




<para id="p1004">
Given 

<link id="a1010" target-id="Figure_1">

Figure 1

</link>

, 

<link id="a1011" target-id="Figure_2">

Figure 2

</link>

, and 


<link id="a1012" target-id="Figure_3">

Figure 3

</link>

, which of the following output images is 
produced by the code in 

<link id="a1013" target-id="Listing_1">

Listing 1

</link>

?

</para>





<para id="p1005">
A. 

<link id="a1014" target-id="Figure_4">

Figure 4

</link>


</para>





<para id="p1006">
B. 

<link id="a1015" target-id="Figure_5">

Figure 5

</link>


</para>












<table id="table1000" summary="A table." pgwide="0">
<tgroup cols="1">





<thead id="thead1000">



<row id="tr1000">



<entry id="th1000">



<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. 

<emphasis id="strong1001" effect="bold">
Question 1.

</emphasis>



</entry>



</row>



</thead>





<tbody id="tbody1000">



<row id="tr1001">



<entry id="td1000">



<code id="pre1000" display="block">
/*File Java3018ra Copyright 2013 R.G.Baldwin
*********************************************************/

import java.awt.Color;
public class Java3018ra{
  public static void main(String[] args){
    new Java3018raRunner().run();
  }//end main
}//end class Java3018ra
//======================================================//

class Java3018raRunner{

  public Java3018raRunner(){//constructor
    System.out.println("Display your name here.");
  }//end constructor
  //----------------------------------------------------//

  public void run(){

    Picture skater = crop(new Picture("Prob04a.bmp"),6,59,392,293);
    Picture hole = crop(new Picture("Prob04b.bmp"),6,59,392,293);
    Picture snowScene = crop(new Picture("Prob04c.jpg"),6,59,392,293);
    processBackground(hole,snowScene);
    redTint(skater);
    greenScreenDraw(skater,snowScene,0,0);
    snowScene.explore();

  }//end run method
  //----------------------------------------------------//

  private void redTint(Picture pic){
    Pixel[] pixels = pic.getPixels();
    Color color = null;
    int red = 0;
    int green = 0;
    int blue = 0;
    for(int cnt = 0;cnt &lt; pixels.length;cnt++){
      color = pixels[cnt].getColor();
      //Apply a red tint to all non-green pixels
      if(!(color.equals(Color.GREEN))){
        //Increase the value of the red component
        red = color.getRed();
        if(red*1.25 &lt; 255){
          red = (int)(red * 1.25);
        }else{
          red = 255;
        }//end else
        //Decrease the value of blue and green
        green = (int)(color.getGreen()*0.8);
        blue = (int)(color.getBlue()*0.8);

        //Apply the new color to the pixel.
        pixels[cnt].setColor(new Color(red,green,blue));
      }//end if
    }//end for loop
  }//end redTint
  //----------------------------------------------------//

  private void processBackground(
                           Picture pattern,
                           Picture dest){

    Pixel[] patternPixels = pattern.getPixels();
    Pixel[] destPixels = dest.getPixels();
    Color color = null;
    int red = 0;
    int green = 0;
    int blue = 0;

    for(int cnt = 0;cnt &lt; patternPixels.length;cnt++){
      color = patternPixels[cnt].getColor();
      if(color.equals(Color.GREEN)){
        //Darken corresponding pixel in the destination.
        color = destPixels[cnt].getColor();
        int avg = (int)(color.getRed()*0.299+
                                  color.getGreen()*0.587+
                                  color.getBlue()*0.114);
        destPixels[cnt].setColor(new Color(avg,avg,avg));
      }else{
        //Apply a red tint to the corresponding pixel in
        // the destination.
        color = destPixels[cnt].getColor();
        red = color.getRed();
        if(red*1.25 &lt; 255){
          red = (int)(red * 1.25);
        }else{
          red = 255;
        }//end else
        green = (int)(color.getGreen() * 0.8);
        blue = (int)(color.getBlue() * 0.8);
        destPixels[cnt].setColor(new Color(red,green,blue));
      }//end else
    }//end for loop
  }//end processBackground
  //----------------------------------------------------//

  private void greenScreenDraw(
                           Picture source,
                           Picture dest,
                           //Place the upper-left corner
                           // of the source image at the
                           // following location in the
                           // destination image.
                           int destX,
                           int destY){
    int width = source.getWidth();
    int height = source.getHeight();
    Pixel pixel = null;
    Color color = null;

    for(int row = 0;row &lt; height;row++){
      for(int col = 0;col &lt; width;col++){
        color = source.getPixel(col,row).getColor();
        if(!(color.equals(Color.GREEN))){
          pixel = dest.getPixel(destX + col,destY + row);
          pixel.setColor(color);
        }//end if
      }//end inner loop
    }//end outer loop

  }//end greenScreenDraw
  //----------------------------------------------------//

  private Picture crop(Picture pic,int startCol,
                                   int startRow,
                                   int width,
                                   int height){
    Picture output = new Picture(width,height);

    int colOut = 0;
    int rowOut = 0;
    int col = 0;
    int row = 0;
    Pixel pixel = null;
    Color color = null;
    for(col = startCol;col &lt; startCol+width;col++){
      for(row = startRow;row &lt; startRow+height;row++){
        color = pic.getPixel(col,row).getColor();
        pixel = output.getPixel(colOut,rowOut);
        pixel.setColor(color);
        rowOut++;
      }//end inner loop
      rowOut = 0;
      colOut++;
    }//end outer loop
    return output;
  }//end crop

}//end class Java3018raRunner
</code>





</entry>



</row>



</tbody>





</tgroup>
</table>





<para id="p1007">
<emphasis id="strong1002" effect="bold">
<emphasis id="Figure_1" effect="bold">

Figure 1

</emphasis>

 - Prob04a.bmp.

</emphasis>
</para>





<para id="p1008">
<media id="media1000" alt="Image of a female ice skater on a green background." display="block">
<image id="img1000" mime-type="image/bmp" src="../../media/Prob04a.bmp" width="406" height="361"/>
</media>


</para>






<para id="p1009">
<emphasis id="strong1003" effect="bold">
<emphasis id="Figure_2" effect="bold">

Figure 2

</emphasis>

 - Prob04b.bmp.

</emphasis>
</para>





<para id="p1010">
<media id="media1001" alt="Image of a black ellipse on a green background." display="block">
<image id="img1001" mime-type="image/bmp" src="../../media/Prob04b.bmp" width="406" height="361"/>
</media>


</para>







<para id="p1011">
<emphasis id="strong1004" effect="bold">
<emphasis id="Figure_3" effect="bold">

Figure 3

</emphasis>

 - Prob04c.jpg.

</emphasis>
</para>





<para id="p1012">
<media id="media1002" alt="Image of a frozen lake with houses on the far side." display="block">
<image id="img1002" mime-type="image/jpeg" src="../../media/Prob04c.jpg" width="406" height="361"/>
</media>


</para>







<para id="p1013">
<emphasis id="strong1005" effect="bold">
<emphasis id="Figure_4" effect="bold">

Figure 4

</emphasis>

 - Possible output image.

</emphasis>
</para>





<para id="p1014">
<media id="media1003" alt="Image of a red-tinted ice skater standing on a pink ellipse with a gray scale background of a frozen lake." display="block">
<image id="img1003" mime-type="image/jpeg" src="../../media/java3018r01.jpg" width="404" height="436"/>
</media>


</para>







<para id="p1015">
<emphasis id="strong1006" effect="bold">
<emphasis id="Figure_5" effect="bold">

Figure 5

</emphasis>

 - Possible output image.

</emphasis>
</para>





<para id="p1016">
<media id="media1004" alt="Image of a red-tinted ice skater standing on a pink ellipse with a darkened background of a frozen lake." display="block">
<image id="img1004" mime-type="image/jpeg" src="../../media/java3018r02.jpg" width="404" height="436"/>
</media>


</para>










<para id="p1017">
<link id="a1016" target-id="answer01">

Answer 1

</link>

 

</para>







</section>
</section>
<section id="h11003">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>




<list id="ul1003" list-type="bulleted">

	

<item id="li1009">
<link id="a1017" target-id="Figure_1">

Figure 1

</link>

. Prob04a.bmp. 

</item>


	

<item id="li1010">
<link id="a1018" target-id="Figure_2">

Figure 2

</link>

. Prob04b.bmp.

</item>


	

<item id="li1011">
<link id="a1019" target-id="Figure_3">

Figure 3

</link>

. Prob04c.jpg.

</item>


	

<item id="li1012">
<link id="a1020" target-id="Figure_4">

Figure 4

</link>

. Possible output image.

</item>


	

<item id="li1013">
<link id="a1021" target-id="Figure_5">

Figure 5

</link>

. Possible output image. 

</item>




</list>











</section>
<section id="h11004">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1004" list-type="bulleted">

	

<item id="li1014">
<link id="a1022" target-id="Listing_1">

Listing 1

</link>

. Question 1. 

</item>




</list>





<para id="p1018">
<emphasis id="strong1007" effect="bold">
What is the meaning of the following two images?

</emphasis>
</para>





<para id="p1019">
This image was inserted here simply to insert some space between the 
questions and the answers to keep them from being visible on the screen at the 
same time. 

</para>





<para id="p1020">
The image is also an example of the kinds of things that we do in my course 
titled ITSE 2321, Object-Oriented Programming.

</para>






<media id="media1005" alt="Spacer image of a rabbit and a penguin." display="block">
<image id="img1005" mime-type="image/jpeg" src="../../media/Spacer01.jpg" width="339" height="290"/>
</media>





<para id="p1021">
This image was also inserted for the purpose of inserting space between the questions and the answers.

</para>





<para id="p1022">



<media id="media1006" alt="Spacer image of a penguin in the snow in front of some houses." display="block">
<image id="img1006" mime-type="image/jpeg" src="../../media/Spacer02.jpg" width="374" height="308"/>
</media>


</para>








</section>
<section id="h11005">
<title>
<emphasis id="Answers" effect="bold">

Answers

</emphasis>


</title>






<section id="h21001">
<title>
<emphasis id="answer01" effect="bold">

Answer 1

</emphasis>

 

</title>




<para id="p1023">
The code in 

<link id="a1023" target-id="Listing_1">

Listing 1

</link>

 produces the output image 
shown in 

<link id="a1024" target-id="Figure_4">

Figure 4

</link>

. 

</para>





<para id="p1024">
<link id="a1025" target-id="question01">

Back to Question 1

</link>

 

</para>






</section>
</section>
<section id="h11006">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>




<para id="p1025">
This section contains a variety of miscellaneous information. 

</para>





	

<note id="note1000" type="">


		


			

<emphasis id="strong1008" effect="bold">
Housekeeping material

</emphasis>

			

<list id="ul1005" list-type="bulleted">

				

<item id="li1015">
Module name: Java3018r Review

</item>


				

<item id="li1016">
File: Java3018r.htm 

</item>


				

<item id="li1017">
Published: 02/17/13

</item>



			

</list>


			

</note>

		








	

<note id="note1001" type="">


		


			

<emphasis id="strong1009" effect="bold">
Disclaimers:

</emphasis>
<para id="p1026">
<emphasis id="strong1010" effect="bold">
Financial

</emphasis>
: 
			Although the Connexions site makes it possible for you to download a 
			PDF file for this module at no charge, and also makes it possible 
			for you to purchase a pre-printed version of the PDF file, you 
			should be aware that some of the HTML elements in this module may 
			not translate well into PDF.

</para>



			

<para id="p1027">
I also want you to know that, I receive no financial compensation 
			from the Connexions website even if you purchase the PDF version of 
			the module.

</para>



			

<para id="p1028">
In the past, unknown individuals have copied my modules from 
			cnx.org, converted them to Kindle books, and placed them for sale on 
			Amazon.com showing me as the author. I neither receive compensation 
			for those sales nor do I know who does receive compensation. If you 
			purchase such a book, please be aware that it is a copy of a module 
			that is freely available on cnx.org and that it was made and 
			published without my prior knowledge.

</para>



			

<para id="p1029">
<emphasis id="strong1011" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer 
			Information Technology at Austin Community College in Austin, TX.
			

</para>



			

</note>

		







	

<para id="p1030">
-end- 

</para>







</section>
</content>




</document>