<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Java3122 Java OOP Opening an Image File in a PictureExplorer Object</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m44916</md:content-id>
  <md:title>Java3122 Java OOP Opening an Image File in a PictureExplorer Object</md:title>
  <md:abstract>Learn how to open an image file specified by a string in a text field in a PictureExplorer object.</md:abstract>
  <md:uuid>a3b05136-c281-407a-946a-90e9977f5538</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>


		

</list>


		

</item>


	

</list>


	

</item>


	

<item id="li1004">
<link id="a1004" target-id="Preview">

Preview

</link>

 

</item>


	

<item id="li1005">
<link id="a1005" target-id="Complete_program_listing">

Complete program listing

</link>


</item>


	

<item id="li1006">
<link id="a1006" target-id="Will_explain_the_code_in_fragments">

Will explain the code in fragments

</link>


</item>


	

<item id="li1007">
<link id="a1007" target-id="Run_the_program">

Run the program

</link>


</item>


	

<item id="li1008">
<link id="a1008" target-id="Whats_next">

What's next?

</link>


</item>


	

<item id="li1009">
<link id="a1009" target-id="Miscellaneous">

Miscellaneous

</link>


</item>




</list>


	

	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	

	

<para id="p1000">
This module is one of a series of modules designed to teach you about Object-Oriented Programming (OOP) using Java. 

</para>




<para id="p1001">
The program described in this module requires the use of the Guzdial-Ericson 
multimedia class library. You will find download, installation, and usage 
instructions for the library at 

<link id="a1010" url="http://cnx.org/content/m44148/latest/">

Java OOP: The Guzdial-Ericson Multimedia Class Library

</link>

.

</para>


	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1002">
I recommend that you open another copy of this document in a separate 
browser window and use the following links to easily find and view the figures 
and listings while you are reading about them.

</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1003" list-type="bulleted">

		

<item id="li1010">
<link id="a1011" target-id="Fig001">

Figure 1

</link>

. Program output at startup.

</item>


		

<item id="li1011">
<link id="a1012" target-id="Fig002">

Figure 2

</link>

. Screen shot after the image is loaded.

</item>


	

</list>


	

</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1012">
<link id="a1013" target-id="List01">

Listing 1

</link>

. Complete program listing. 

</item>


		

<item id="li1013">
<link id="a1014" target-id="List02">

Listing 2

</link>

. The driver class. 

</item>


		

<item id="li1014">
<link id="a1015" target-id="List03">

Listing 3

</link>

. Beginning of the Prob11Runner class. 

</item>


		

<item id="li1015">
<link id="a1016" target-id="List04">

Listing 4

</link>

. Beginning of the constructor. 

</item>


		

<item id="li1016">
<link id="a1017" target-id="List05">

Listing 5

</link>

. Beginning of anonymous listener class. 

</item>


		

<item id="li1017">
<link id="a1018" target-id="List06">

Listing 6

</link>

. Completion of the anonymous listener class. 

</item>


	

</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Preview" effect="bold">

Preview

</emphasis>


</title>


	

<para id="p1003">
This program demonstrates how to specify an image file in a text field, and open the image in a new 
	

<emphasis id="strong1000" effect="bold">
PictureExplorer

</emphasis>
 object.

</para>




<para id="p1004">
<emphasis id="strong1001" effect="bold">
Program output at startup

</emphasis>
</para>




<para id="p1005">
<link id="a1019" target-id="Fig001">

Figure 1

</link>

 shows the program output at 
startup.

</para>





<para id="p1006">
<emphasis id="strong1002" effect="bold">
<emphasis id="Fig001" effect="bold">

Figure 1

</emphasis>

 - Program output at startup.

</emphasis>
</para>




<para id="p1007">
<media id="media1000" alt="Missing image." display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/prob11-01.jpg" width="308" height="64"/>
</media>


</para>


	



<para id="p1008">
<emphasis id="strong1003" effect="bold">
Pre-loaded image file name

</emphasis>
</para>




<para id="p1009">
For convenience, the text field is pre-loaded with the name of an image file that is located in the current directory.

</para>




<para id="p1010">
<emphasis id="strong1004" effect="bold">
Press Enter to load the image

</emphasis>
</para>




<para id="p1011">
Pressing the Enter key while the text field has the focus will cause the image to be loaded into a 


<emphasis id="strong1005" effect="bold">
PictureExplorer

</emphasis>
 
	object, and will cause the 

<emphasis id="strong1006" effect="bold">
PictureExplorer

</emphasis>
 object to be displayed as shown in 


<link id="a1020" target-id="Fig002">

Figure 2

</link>

.

</para>





<para id="p1012">
<emphasis id="strong1007" effect="bold">
<emphasis id="Fig002" effect="bold">

Figure 2

</emphasis>

 - Screen shot after the image is loaded.

</emphasis>
</para>




<para id="p1013">
<media id="media1001" alt="Missing image." display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/prob11-02.jpg" width="373" height="440"/>
</media>


</para>


	



<para id="p1014">
<emphasis id="strong1008" effect="bold">
Control panel is relocated

</emphasis>
</para>




<para id="p1015">
Note in 

<link id="a1021" target-id="Fig002">

Figure 2

</link>

 that the control panel 
containing the text field has been automatically relocated to a position immediately below the 


<emphasis id="strong1009" effect="bold">
PictureExplorer

</emphasis>
 
	object.

</para>




<para id="p1016">
<emphasis id="strong1010" effect="bold">
Another image file in the current directory

</emphasis>
</para>




<para id="p1017">
Entering the path and name of any jpeg file will cause that file to be loaded 
into a new 

<emphasis id="strong1011" effect="bold">
PictureExplorer

</emphasis>
 object.

</para>




</section>
<section id="h11003">
<title>
<emphasis id="Complete_program_listing" effect="bold">

Complete program listing

</emphasis>


</title>




<para id="p1018">
A complete listing of the program discussed in this lecture is shown in


<link id="a1022" target-id="List01">

Listing 1

</link>

 below.

</para>





<para id="p1019">
<emphasis id="strong1012" effect="bold">
<emphasis id="List01" effect="bold">

Listing 1

</emphasis>

 - Complete program listing.

</emphasis>
</para>





<code id="pre1000" display="block">/*File Prob11 Copyright 2012 R.G.Baldwin
The purpose of this program is to demonstrate the use of
a JTextField object to specify the name of an image file,
which is then loaded and displayed in a PictureExplorer
object.

The text field is pre-loaded with the name of an image
file that is in the current directory (Prob11a.jpg).

An image file named Prob11b.jpg is also in the current
directory and can be loaded and displayed by entering
the name in the text field.

Any image file on the disk can be loaded and displayed
by entering the path and name of the image file.
*********************************************************/

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JLabel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.WindowConstants;

public class Prob11{
  public static void main(String[] args){
    new Prob11Runner();
  }//end main method
}//end class Prob11
//======================================================//

class Prob11Runner extends JFrame{
  private Prob11Runner jFrameObj = null;
  private PictureExplorer explorer = null;
  private Picture pix;

  private JPanel fileNamePanel = new JPanel();
  private JTextField inputFileNameField =
                         new JTextField("Prob11a.jpg",20);

  private String fileName = "no file specified";
  //----------------------------------------------------//

  public Prob11Runner(){//constructor
    fileNamePanel.add(new JLabel("File name: "));
    fileNamePanel.add(inputFileNameField);

    //Add the fileNamePanel to the content pane, adjust
    // to the correct size, and set the title.
    getContentPane().add(fileNamePanel);
    pack();
    setTitle("Dick Baldwin");

    //Make the GUI visible, set the focus, and establish
    // a reference to the GUI object.
    setVisible(true);
    inputFileNameField.requestFocus();
    jFrameObj = this;

    //--------------------------------------------------//
    //Register listeners on the user input field.
    //--------------------------------------------------//

    inputFileNameField.addActionListener(
      new ActionListener(){
        public void actionPerformed(ActionEvent e){
          fileName = inputFileNameField.getText();

          pix = new Picture(fileName);
          pix.addMessage("Dick Baldwin",10,20);
          explorer = new PictureExplorer(pix);

          //Set the location for the control GUI
          // immediately below the PictureExplorer object,
          // and set its default close operation.
          setLocation(0,pix.getHeight() + 128);
          jFrameObj.setDefaultCloseOperation(
                           WindowConstants.EXIT_ON_CLOSE);
        }//end action performed
      }//end newActionListener
    );//end addActionListener
    //--------------------------------------------------//
  }//end constructor
  //----------------------------------------------------//
}//end class Prob11Runner
</code>



	

</section>
<section id="h11004">
<title>
<emphasis id="Will_explain_the_code_in_fragments" effect="bold">

Will explain the code in fragments

</emphasis>


</title>




<para id="p1020">
As usual, I will break the code down, and explain it in fragments.

</para>




<para id="p1021">
<emphasis id="strong1013" effect="bold">
The driver class

</emphasis>
</para>




<para id="p1022">
The driver class is shown in 

<link id="a1023" target-id="List02">

Listing 2

</link>

.

</para>




<para id="p1023">
There is nothing new in 

<link id="a1024" target-id="List02">

Listing 2

</link>

.

</para>


	

<table id="table1000" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="List02" effect="bold">

Listing 2

</emphasis>

 - The driver class. 

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1001" display="block">public class Prob11{
  public static void main(String[] args){
    new Prob11Runner();
  }//end main method
}//end class Prob11
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>


	

<para id="p1024">
<emphasis id="strong1014" effect="bold">
Beginning of the Prob11Runner class

</emphasis>
</para>




<para id="p1025">
The 

<emphasis id="strong1015" effect="bold">
Prob11Runner

</emphasis>
 class begins in


<link id="a1025" target-id="List03">

Listing 3

</link>

.

</para>




<para id="p1026">
<link id="a1026" target-id="List03">

Listing 3

</link>

 declares several instance 
variables that will be used later in the program, initializing some of them.

</para>




<para id="p1027">
Note that the class extends 

<emphasis id="strong1016" effect="bold">
JFrame

</emphasis>
, so an object of the 
class 

<emphasis id="em1000" effect="italics">
"is a"

</emphasis>
 

<emphasis id="strong1017" effect="bold">
JFrame

</emphasis>
 object.

</para>


	

<table id="table1001" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="List03" effect="bold">

Listing 3

</emphasis>

 - Beginning of the Prob11Runner class. 

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">



<code id="pre1002" display="block">class Prob11Runner extends JFrame{
  private Prob11Runner jFrameObj = null;
  private PictureExplorer explorer = null;
  private Picture pix;

  private JPanel fileNamePanel = new JPanel();
  private JTextField inputFileNameField =
               new JTextField("Prob11a.jpg",20);

  private String fileName = "no file specified";</code>




<code id="pre1003" display="block">

</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>


	

<para id="p1028">
<emphasis id="strong1018" effect="bold">
Beginning of the constructor

</emphasis>
</para>




<para id="p1029">
The constructor for the 

<emphasis id="strong1019" effect="bold">
Prob11Runner

</emphasis>
 class begins in


<link id="a1027" target-id="List04">

Listing 4

</link>

.

</para>




<para id="p1030">
The code in 

<link id="a1028" target-id="List04">

Listing 4

</link>

 performs the 
physical construction of the GUI show in 

<link id="a1029" target-id="Fig001">

Figure 1

</link>

.

</para>




<para id="p1031">
The code in 

<link id="a1030" target-id="List04">

Listing 4

</link>

 saves a reference to 
the object so that it can be accessed later from within a listener object.

</para>


	

<table id="table1002" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="List04" effect="bold">

Listing 4

</emphasis>

 - Beginning of the constructor. 

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">



<code id="pre1004" display="block">  public Prob11Runner(){//constructor
    fileNamePanel.add(new JLabel("File name: "));
    fileNamePanel.add(inputFileNameField);

    //Add the fileNamePanel to the content pane, adjust
    // to the correct size, and set the title.
    getContentPane().add(fileNamePanel);
    pack();
    setTitle("Dick Baldwin");

    //Make the GUI visible, set the focus, and establish
    // a reference to the GUI object.
    setVisible(true);
    inputFileNameField.requestFocus();
    jFrameObj = this;
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>


	

<para id="p1032">
<emphasis id="strong1020" effect="bold">
Register a listener on the text field

</emphasis>
</para>




<para id="p1033">
<link id="a1031" target-id="List05">

Listing 5

</link>

 shows the beginning of code that instantiates an 


<emphasis id="strong1021" effect="bold">
ActionListener

</emphasis>
 object of an anonymous 
	listener class, and registers the listener object on the text field shown in
	

<link id="a1032" target-id="Fig001">

Figure 1

</link>

.

</para>


	

<table id="table1003" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="List05" effect="bold">

Listing 5

</emphasis>

 - Beginning of anonymous listener class. 

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">



<code id="pre1005" display="block">    inputFileNameField.addActionListener(
      new ActionListener(){
        public void actionPerformed(ActionEvent e){
          fileName = inputFileNameField.getText();

          pix = new Picture(fileName);
          pix.addMessage("Dick Baldwin",10,20);

          explorer = new PictureExplorer(pix);</code>




<code id="pre1006" display="block">

</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>


	

<para id="p1034">
<emphasis id="strong1022" effect="bold">
Get image and create Picture object

</emphasis>
</para>




<para id="p1035">
<link id="a1033" target-id="List05">

Listing 5

</link>

 begins by getting the name of the image file from the text field, using that image file to create a new 


<emphasis id="strong1023" effect="bold">
Picture

</emphasis>
 object, 
	and adding a name in the upper-left corner of the picture.

</para>




<para id="p1036">
<emphasis id="strong1024" effect="bold">
Create new PictureExplorer object

</emphasis>
</para>




<para id="p1037">
Then 

<link id="a1034" target-id="List05">

Listing 5

</link>

 instantiates a new 

<emphasis id="strong1025" effect="bold">

PictureExplorer

</emphasis>
 object that encapsulates the 

<emphasis id="strong1026" effect="bold">
Picture

</emphasis>
 object that was created from the image file.

</para>




<para id="p1038">
<emphasis id="strong1027" effect="bold">
Completion of the anonymous listener class

</emphasis>
</para>




<para id="p1039">
<link id="a1035" target-id="List06">

Listing 6

</link>

 shows the completion of the 
anonymous listener class, as well as the end of the constructor, and the end of the class named 


<emphasis id="strong1028" effect="bold">
Prob11Runner

</emphasis>
.

</para>


	

<table id="table1004" summary="This is a table." pgwide="677">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="List06" effect="bold">

Listing 6

</emphasis>

 - Completion of the anonymous listener class. 

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">



<code id="pre1007" display="block">          setLocation(0,pix.getHeight() + 128);
          
          jFrameObj.setDefaultCloseOperation(
                           WindowConstants.EXIT_ON_CLOSE);
        }//end action performed
      }//end newActionListener
    );//end addActionListener
    //--------------------------------------------------//
  }//end constructor
  //----------------------------------------------------//
}//end class Prob11Runner
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>


	

<para id="p1040">
<emphasis id="strong1029" effect="bold">
Relocate the GUI

</emphasis>
</para>




<para id="p1041">
<link id="a1036" target-id="List06">

Listing 6

</link>

 begins by setting the location 
of the GUI to a location that is immediately below the 

<emphasis id="strong1030" effect="bold">
PictureExplorer

</emphasis>
 
object.

</para>




<para id="p1042">
<emphasis id="strong1031" effect="bold">
Relocate the GUI (cont'd)

</emphasis>
</para>




<para id="p1043">
Note that the value of 128 pixels was experimentally determined to be the approximate difference between the height of the 


<emphasis id="strong1032" effect="bold">
PictureExplorer

</emphasis>
 object and the height of the 

<emphasis id="strong1033" effect="bold">
Picture

</emphasis>
 object that it 
	encapsulates.

</para>




<para id="p1044">
<emphasis id="em1001" effect="italics">
(This difference may not be correct for different display options on 
different operating systems.)

</emphasis>
</para>




<para id="p1045">
<emphasis id="strong1034" effect="bold">
Set the default close operation

</emphasis>
</para>




<para id="p1046">
<link id="a1037" target-id="List06">

Listing 6

</link>

 ends by setting the behavior of 
the X-button in the GUI to a value that will cause it to terminate the program when the button is clicked.

</para>






</section>
<section id="h11005">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>






<para id="p1047">
I encourage you to copy the code from 

<link id="a1038" target-id="List01">

Listing 1

</link>

 and 
download the image file named 

<link id="a1039" url="Prob11a.jpg">

Prob11a.jpg

</link>

. 
Compile the code and execute it. Experiment with the code, making changes, and 
observing the results of your changes. Make certain that you can explain why 
your changes behave as they do.

</para>




</section>
<section id="h11006">
<title>
<emphasis id="Whats_next" effect="bold">

What's next?

</emphasis>


</title>




<para id="p1048">
In the next module, you will learn how to extract color data from a selected pixel in a 


<emphasis id="strong1035" effect="bold">
PictureExplorer

</emphasis>
 object, and how to display a color value in a text field.

You will also learn how to disable the X-button in the 

<emphasis id="strong1036" effect="bold">
PictureExplorer

</emphasis>
 object, and how to use a reference to the 


<emphasis id="strong1037" effect="bold">
JFrame

</emphasis>
 object that serves as a container for the 

<emphasis id="strong1038" effect="bold">
PictureExplorer

</emphasis>
 object.

</para>


	

</section>
<section id="h11007">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1049">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1039" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1005" list-type="bulleted">

					

<item id="li1018">
Module name: Java OOP: Opening an Image File in a PictureExplorer Object

</item>


					

<item id="li1019">
File: Java3122.htm


</item>


					

<item id="li1020">
Published: 09/08/12

</item>




<item id="li1021">
Revised: 02/06/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1040" effect="bold">
Disclaimers:

</emphasis>
<para id="p1050">
<emphasis id="strong1041" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1051">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1052">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1053">
<emphasis id="strong1042" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	



	

<para id="p1054">
-end- 

</para>






</section>
</content>




</document>